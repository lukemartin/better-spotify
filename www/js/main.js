(function() {
  var app;

  app = angular.module('betterSpotify', ['ngRoute']);

  app.config([
    '$routeProvider', '$locationProvider', '$compileProvider', function($routeProvider, $locationProvider, $compileProvider) {
      $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|file|tel|spotify):/);
      $locationProvider.html5Mode(true);
      return $routeProvider.when('/meow', {
        templateUrl: '/partials/meow.html'
      }).when('/artists/:id', {
        templateUrl: '/partials/artist.html',
        controller: 'ArtistController'
      }).when('/auth', {
        templateUrl: '/partials/auth.html',
        controller: 'AuthController'
      }).when('/authed', {
        templateUrl: '/partials/meow.html',
        controller: 'AuthedController'
      }).when('/user', {
        templateUrl: '/partials/user.html',
        controller: 'UserController'
      }).otherwise({
        templateUrl: '/partials/main.html',
        controller: 'HomeController'
      });
    }
  ]);

  app.controller('HomeController', [
    '$scope', '$http', function($scope, $http) {
      return $scope.getArtists = function(artist) {
        return $http.get("https://api.spotify.com/v1/search?q=" + artist + "&type=artist").success(function(data) {
          console.log(data.artists.items);
          return $scope.artists = data.artists.items;
        }).error(function(data) {
          return console.log(data);
        });
      };
    }
  ]);

  app.controller('ArtistController', [
    '$scope', '$http', '$routeParams', function($scope, $http, $routeParams) {
      $http.get("https://api.spotify.com/v1/artists/" + $routeParams.id).success(function(data) {
        console.log(data);
        return $scope.artist = data;
      }).error(function(data) {
        return console.log(data);
      });
      return $http.get("https://api.spotify.com/v1/artists/" + $routeParams.id + "/albums?limit=50").success(function(data) {
        console.log(data);
        return $scope.albums = data.items;
      }).error(function(data) {
        return console.log(data);
      });
    }
  ]);

  app.controller('AuthController', [
    '$scope', '$http', function($scope, $http) {
      var clientId, redirectUrl;
      clientId = '59d6d5180eca418095c49cb30bc0c3a3';
      redirectUrl = encodeURIComponent('http://localhost:4141/authed');
      return window.location = "https://accounts.spotify.com/authorize?client_id=" + clientId + "&response_type=token&redirect_uri=" + redirectUrl + "&scope=user-library-read user-library-modify";
    }
  ]);

  app.controller('AuthedController', [
    '$scope', '$http', '$location', function($scope, $http, $location) {
      var accessToken, expires, hash, tokenType;
      console.log('beep');
      hash = window.location.hash.split('&');
      accessToken = hash[0].split('=')[1];
      tokenType = hash[1].split('=')[1];
      expires = hash[2].split('=')[1];
      window.localStorage.setItem('authed', true);
      window.localStorage.setItem('accessToken', accessToken);
      window.localStorage.setItem('tokenType', tokenType);
      window.localStorage.setItem('expires', expires);
      return window.location = '/user';
    }
  ]);

  app.controller('UserController', [
    '$scope', '$http', function($scope, $http) {
      var getTracks;
      getTracks = function() {
        return $http.get("https://api.spotify.com/v1/me/tracks?limit=50", {
          headers: {
            'Authorization': 'Bearer ' + window.localStorage.getItem('accessToken')
          }
        }).success(function(data) {
          console.log(data);
          return $scope.tracks = data;
        }).error(function(data) {
          return console.log(data);
        });
      };
      return $http.get("https://api.spotify.com/v1/me", {
        headers: {
          'Authorization': 'Bearer ' + window.localStorage.getItem('accessToken')
        }
      }).success(function(data) {
        $scope.user = data;
        return getTracks();
      }).error(function(data) {
        return console.log(data);
      });
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,